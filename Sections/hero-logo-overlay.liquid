{% schema %}
{
  "name": "Hero with Logo Overlay",
  "tag": "section",
  "class": "section-hero-logo-overlay",
  "settings": [
     {
      "type": "url",
      "id": "desktop_video_url",
      "label": "Desktop Background Video URL"
    },
    {
      "type": "url",
      "id": "mobile_video_url",
      "label": "Mobile Background Video URL"
    },
    {
      "type": "image_picker",
      "id": "logo_image",
      "label": "Logo image (white)"
    },
    {
      "type": "text",
      "id": "slogan",
      "label": "Slogan text",
      "default": "Together Let’s Brighten Their Lives®"
    },
    {
      "type": "range",
      "id": "delay",
      "label": "Logo display duration (seconds)",
      "default": 2,
      "min": 1,
      "max": 10,
      "step": 1
    }
  ],
  "presets": [
    {
      "name": "Hero with Logo Overlay"
    }
  ]
}
{% endschema %}

<div class="hero-logo-overlay-wrapper" data-delay="{{ section.settings.delay }}">
  <div class="video-wrapper">
    <video class="hero-video" autoplay muted loop playsinline id="heroBackgroundVideo">
     <source id="heroVideoSource" src="{{ section.settings.desktop_video_url }}" type="video/mp4">
    </video>

    <div class="hero-overlay" id="heroLogoOverlay">
      <img class="splash-logo" src="{{ section.settings.logo_image | image_url }}" alt="Logo">
    </div>
    
    <div class="hero-content-scroll">
      <p class="splash-slogan" style="animation-delay: {{ section.settings.delay | plus: 1.5 }}s">
        {{ section.settings.slogan }}
      </p>
      <a href="/collections/all" class="cta-button" style="animation-delay: {{ section.settings.delay | plus: 2 }}s">
         Shop What They Need
      </a>
      <div class="scroll-down-indicator" style="animation-delay: {{ section.settings.delay | plus: 2.5 }}s">
        <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" fill="none" stroke="currentColor" stroke-width="2" class="chevrons-icon">
          <path d="m7 6 5 5 5-5"/><path d="m7 13 5 5 5-5"/>
        </svg>
      </div>
    </div>
  </div>
</div>

{% stylesheet %}
.hero-logo-overlay-wrapper {
  position: relative;
  width: 100%;
  height: 100vh;
  overflow: hidden;
}

.video-wrapper {
  position: relative;
  width: 100%;
  height: 100%;
}

.hero-video {
  width: 100%;
  height: 100%;
  object-fit: cover;
  position: absolute;
  top: 0;
  left: 0;
  z-index: 0;
}

.hero-overlay {
  position: absolute;
  top: 0; left: 0;
  width: 100%; height: 100%;
  z-index: 1;
  pointer-events: none;
}

.hero-content-scroll {
  position: absolute;
  top: 50%; left: 50%;
  transform: translate(-50%, 0);
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 3rem;
  z-index: 10;
  text-align: center;
}

.splash-slogan {
  font-size: 6.5rem;
  color: white;
  font-weight: 600;
  opacity: 0;
  animation: fadeInSlogan 0.5s ease 1.2s forwards;
}

@keyframes fadeInSlogan {
  from { opacity: 0; transform: translateY(10px); }
  to { opacity: 1; transform: translateY(0); }
}

@keyframes fadeInUp {
  from { opacity: 0; transform: translateY(10px); }
  to { opacity: 1; transform: translateY(0); }
}

@keyframes bounceDown {
  0%, 100% { transform: translateY(0); }
  50% { transform: translateY(6px); }
}
{% endstylesheet %}

<script>
  function handleHeroAnimation() {
    if (window.location.pathname !== "/") return;
    if (localStorage.getItem("hasPlayedHeroAnimation") === "true") {
      document.body.classList.remove("no-header");
      document.body.classList.add("show-header");
  
      const overlay = document.getElementById("heroLogoOverlay");
      if (overlay) overlay.remove();
  
      const customHeader = document.getElementById("customHeaderWrapper");
      const scrollHeaderWrapper = document.getElementById("scrollHeaderWrapper");
      const announcement = document.querySelector(".announcement-bar");
  
      if (scrollHeaderWrapper) {
          scrollHeaderWrapper.classList.remove("hidden");
          scrollHeaderWrapper.style.display = "block";
      }
  
      if (customHeader) customHeader.style.display = "none";
      if (announcement) announcement.style.display = "block";
  
      return;
    } 
    const videoEl = document.getElementById("heroBackgroundVideo");
    const sourceEl = document.getElementById("heroVideoSource");
  
    const isMobile = window.innerWidth <= 767;
    const mobileSrc = "{{ section.settings.mobile_video_url }}";
    const desktopSrc = "{{ section.settings.desktop_video_url }}";
  
    if (videoEl && sourceEl) {
      sourceEl.src = isMobile ? mobileSrc : desktopSrc;
      videoEl.load();  
    }
  
    const logo = document.querySelector(".splash-logo");
    const delay = (parseFloat(document.querySelector(".hero-logo-overlay-wrapper")?.dataset.delay) || 2) * 1000;
  
    document.body.classList.add("no-header");
  
    logo?.addEventListener("animationend", () => {
      const overlay = document.getElementById("heroLogoOverlay");
      if (overlay) overlay.remove();
  
      const customHeader = document.getElementById("customHeaderWrapper");
      if (customHeader) {
        customHeader.classList.remove("hidden");
        customHeader.style.display = "block";
      }
  
      let hasSwitched = false;
      window.addEventListener("scroll", function () {
        if (window.scrollY > 30 && !hasSwitched) {
          hasSwitched = true;
  
          const announcement = document.querySelector(".announcement-bar");
          if (announcement) {
            announcement.classList.remove("hidden");
            announcement.style.display = "block";
          }
  
          const scrollHeaderWrapper = document.getElementById("scrollHeaderWrapper");
          if (scrollHeaderWrapper) {
            scrollHeaderWrapper.classList.remove("hidden");
            scrollHeaderWrapper.style.display = "block";
          }
  
          if (customHeader) {
            customHeader.style.display = "none";
          }
        }
      });
    });
    
    setTimeout(() => {
      localStorage.setItem("hasPlayedHeroAnimation", "true");
      document.body.classList.remove("no-header");
      document.body.classList.add("show-header");
    }, delay);
  }
  document.addEventListener("DOMContentLoaded", function () {
    handleHeroAnimation();
  });
  window.addEventListener('pageshow', function(event) {
    if (event.persisted) {
      handleHeroAnimation();
    }
  });
  </script> 